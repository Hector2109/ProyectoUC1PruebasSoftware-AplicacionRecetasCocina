/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package org.itson.isw.pruebassoftware.app.recetas.cocina.uc1;

import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import org.itson.arquitecturasoftware.apprecetasc_bo_Control.ControlBO;
import org.itson.arquitecturasoftware.apprecetasc_bo_excepcionesDTO.ValidacionDTOException;
import org.itson.arquitecturasoftware.apprecetasc_dto.RecetaDTO;
import org.itson.arquitecturasoftware.apprecetasc_dto.UsuarioDTO;

/**
 *
 * @author Hector Espinoza
 */
public class DlgPlatillosFavoritos extends javax.swing.JDialog {

    private ControlBO control;
    private UsuarioDTO usuario;
    
    /**
     * Creates new form DlgPlatillosFavoritos
     */
    public DlgPlatillosFavoritos(java.awt.Dialog parent, boolean modal, ControlBO control, UsuarioDTO usuario) {
        super(parent, modal);
        initComponents();
        this.control = control;
        this.usuario = usuario;
        
        
        try {
            llenarTabla();
        } catch (ValidacionDTOException ex) {
            Logger.getLogger(DlgPlatillosGuardados.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // Agregar MouseListener para detectar doble clic en la tabla
        tblPlatillos.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evt) {
                if (evt.getClickCount() == 1) {
                    mostrarDetallesReceta();
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRegresar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPlatillos = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnRegresar.setBackground(new java.awt.Color(92, 157, 157));
        btnRegresar.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnRegresar.setText("Regresar");
        btnRegresar.setBorder(null);
        btnRegresar.setBorderPainted(false);
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        getContentPane().add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 210, 70));

        tblPlatillos.setBackground(new java.awt.Color(217, 217, 217));
        tblPlatillos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblPlatillos.setPreferredSize(new java.awt.Dimension(1338, 511));
        jScrollPane3.setViewportView(tblPlatillos);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 1400, 610));

        jPanel1.setBackground(new java.awt.Color(245, 245, 220));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Emoji", 1, 36)); // NOI18N
        jLabel1.setText("Platillos Favoritos");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 10, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1500, 230));

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/platillosGuardados.png"))); // NOI18N
        getContentPane().add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        DlgMenuUsuario menu = new DlgMenuUsuario(this, true, control, usuario);
        dispose();
        menu.setVisible(true);
    }//GEN-LAST:event_btnRegresarActionPerformed

     public void llenarTabla() throws ValidacionDTOException {
        DefaultTableModel modelo = new DefaultTableModel();
        LinkedList <RecetaDTO> recetas = control.obtenerRecetasFav(usuario);
        
        
        // Columna para las imágenes y el nombre de las recetas
        modelo.addColumn("Imagen");
        modelo.addColumn("Nombre");

        for (RecetaDTO receta : recetas) {
            // Obtener la imagen automáticamente según el nombre de la receta
            ImageIcon imagenOriginal = ImageLoader.obtenerImagen(receta.getNombre());

            // Escalar la imagen a un tamaño adecuado (por ejemplo, 50x50 píxeles)
            Image imagenEscalada = imagenOriginal.getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH);
            ImageIcon imagen = new ImageIcon(imagenEscalada);  // Crear un nuevo ImageIcon con la imagen escalada

            Object[] fila = new Object[]{
                imagen, // Imagen obtenida automáticamente
                receta.getNombre() 
            };

            modelo.addRow(fila);
        }

        tblPlatillos.setModel(modelo);

        // Establecer el TableCellRenderer personalizado para la columna de imágenes
        TableColumnModel columnModel = tblPlatillos.getColumnModel();
        columnModel.getColumn(0).setCellRenderer(new ImageRender());  // Renderer para la columna de imágenes

        // Ajustar ancho de la columna de la imagen (opcional)
        columnModel.getColumn(0).setPreferredWidth(60);
        
         tblPlatillos.setRowHeight(80);
        
    }
     
     // Método para mostrar los detalles de la receta seleccionada
    private void mostrarDetallesReceta() {
        int filaSeleccionada = tblPlatillos.getSelectedRow();

        if (filaSeleccionada >= 0) {
            // Obtener el nombre de la receta desde la columna "Nombre"
            String nombreReceta = (String) tblPlatillos.getValueAt(filaSeleccionada, 1);

            // Buscar la receta completa usando el nombre
            RecetaDTO recetaSeleccionada;
            try {
                recetaSeleccionada = control.obtenerReceta(new RecetaDTO(nombreReceta));
                // Crear y mostrar el nuevo diálogo con la receta seleccionada
                DlgReceta dlg = new DlgReceta(this, true, control, recetaSeleccionada, usuario, ConstantesGUI.FAVORITAS);
                dispose();
                dlg.setVisible(true);
            } catch (ValidacionDTOException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error!!", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona una receta", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel fondo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblPlatillos;
    // End of variables declaration//GEN-END:variables
}
